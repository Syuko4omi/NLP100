10
・ファイルを開けて全部読む
変数Linesに各行の内容をリスト形式で入れるには

with open(ファイル名) as hoge:
    Lines = hoge.readlines()


11
・ファイルに書き込む
with open(ファイル名, "w") as hoge:
    hoge.write(なんちゃら)

・expandコマンド
タブ1個を任意個のスペースに変換。expand hoge.txtでタブ1個->スペース8個にするし、expand -t 1 hoge.txtなら1個にする。-tで個数を変更可能。

・sedコマンド
文字の置換を行う。cat hoge.txt | sed s/fuga/pohe/g とすれば、hoge.txt中のすべての"fuga"を"pohe"に変更する。（gを抜くと、最初にマッチした部分のみ変更される。）
タブを認識させるには$'\t'とする必要がある。

・trコマンド
「特定の一文字」の置換を行う。cat hoge.txt | tr 'hoge' 'fuga'とすると、 h->f、o->u...という形で変更される。なので tr '\t' ' 'とすればタブがスペースに置換される。


12
・cutコマンド
テキストファイルから必要な項目のみ切り出す。cut -f (切り出す項目が何番目にあるか) -d (区切り文字) （ファイル名）という形式で用いる。cut -f 1 -d $'\t' popular-names.txtとすれば、名前の欄のみ取得できる。dはdelimitersの略。fはfieldsの略。


13
・pasteコマンド
複数ファイルのn行目を結合して新たにn行目にする。例えば paste -d $'\t' col1.txt col2.txt とすると、2つのファイルの各行がタブ区切りでくっつく（paste -d $'\t' col[1-2].txtでもok）


14,15
・headコマンド
オプションで(-n 行数)とすることにより、ファイルの先頭から指定した行数だけ表示する。

・tailコマンド
Headと使い方は同じで、こちらは末尾から指定した行数分を表示する。


16
・splitコマンド
行数指定でファイルを分割する。split -l 3 hoge.txt hogehoge-とすると、hogehoge-という接頭辞を持つ行数3のファイルに分割してくれる。split -n 3 hoge.txt hogehoge-のように-nオプションを指定すると、ファイルを指定した数に等分する。


17,18,19
・sortコマンド
各行の要素を並び換える。オプションとして-n, -r, -k, -tなどがある。
数字の大小で並び替えるならsort -nとして-nオプションを用いる。
逆順にソートするなら-rオプションを用いる。並べ替えるフィールドを指定するなら-k (何番目のフィールドでソートするか)とする。
フィールドの区切りはデフォルトでは空白になっているので、それを変更したい（例えばカンマにしたい）時は -t ','とする。

・uniqコマンド
Sortコマンドで「並べ替え済み」のテキストに対して用いる。隣接する行の要素を比較し、被りがある場合にそれを一つにまとめる。重複している行に対して、それが何回重複しているかを数えるのは-cオプションを用いる。

・pythonのソート
sort(key, reverse)を指定できる。keyとしては、例えばlambdaを用いてkey = lambda x: int(x[1])とすれば、多重リストの2番目の要素でソートすることができるし、reverse = Trueと指定すれば逆順に並び替えられる。
